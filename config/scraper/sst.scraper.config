[DEFAULT]
########################
# Company-level fields #
########################
# Company name
company_name = Surgical Safety Technologies 

# Main job page URL
url = https://sst.humi.ca/job-board

###################
# Job list fields #
###################
# XPath specifying a job listing link
joblist.link.xpath = //div[@class="ui large header"]/a

# One of: NONE, NEXTPAGE, PAGENUMBER or INFINITESCROLL
# ----
# A value of NONE specifies that this company has no pagination
# ----
# A value of NEXTPAGE specifies that this company has pagination with a "next" button
#   in this case, "joblist.nextpage.css" should be a CSS selector for the "next" button
# ----
# A value of PAGENUMBER specifies that this company has pagination with page number buttons
#   in this case, "joblist.nextpage.css" should be a CSS selector for a page number,
#   and must include a $PAGENUMBER placeholder that will be dynamically filled in
# ----
# A value of INFINITESCROLL specifies that this company has an infinite scroll pagination (without buttons)
#   TODO: currently not supported in the scraper
joblist.pagination = NONE

# CSS selector specifying the "next page" button if "joblist.pagination" is NEXTPAGE, or
# specifying a page number button with $PAGENUMBER placeholder if "joblist.pagination" is PAGENUMBER
joblist.nextpage.css = ...

######################
# Job details fields #
######################
# XPath specifying the job title text
jobdetails.title.xpath = //div[@class="ui left floated large header"]/text()

# XPath specifying the job location text (e.g.: City, Province)
jobdetails.location.xpath = //div[@class="ui sub header"]/text()

# XPath specifying the top-most element containing the job description
# This can either specify the top-level element containing the description, or
# it can specify a list of elements to be joined together
## Note: find first <h4> node in description (Introduction) and select all of its following siblings
jobdetails.description.xpath = //div[contains(@class, "job-details")]/h4[1]/following-sibling::node()

# Boolean (True/False) specifying whether this job uses URL for application
# If False, must specify "jobdetails.application_email"
jobdetails.is_url_application = True

# Email address to use for applications (this value is ignored if "jobdetails.is_url_application" is True)
jobdetails.application_email = ...

# URL of the company logo (can be found in the Employers export from jobboard)
jobdetails.logo = https://talenthub.vectorinstitute.ai/uploads/employer/logo/298887/nQ5iaQ_d.jpg

# Optional URL UTM parameters to be added to job application link
# Note: Set this value to "None" if no params should be added
jobdetails.url_utm_params = ?utm_source=Vector%%20Digital%%20Talent%%20Hub&utm_medium=job%%20link&utm_campaign=Vector%%20Digital%%20Talent%%20Hub